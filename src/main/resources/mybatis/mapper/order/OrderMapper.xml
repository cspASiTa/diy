<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hycxkj.order.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.hycxkj.order.bean.Order">
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_detail_id" jdbcType="VARCHAR" property="orderDetailId" />
    <result column="item_id" jdbcType="BIGINT" property="itemId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="price" jdbcType="BIGINT" property="price" />
    <result column="total_price" jdbcType="BIGINT" property="totalPrice" />
    <result column="weights" jdbcType="BIGINT" property="weights" />
    <result column="pic_path" jdbcType="VARCHAR" property="picPath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, order_detail_id, item_id, num, price, total_price, weights, pic_path
  </sql>
  <select id="selectByExample" parameterType="com.hycxkj.order.bean.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.hycxkj.order.bean.OrderExample">
    delete from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hycxkj.order.bean.Order">
    <selectKey keyProperty="orderId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order (order_detail_id, item_id, num,
      price, total_price, weights,
      pic_path)
    values (#{orderDetailId,jdbcType=VARCHAR}, #{itemId,jdbcType=BIGINT}, #{num,jdbcType=INTEGER},
      #{price,jdbcType=BIGINT}, #{totalPrice,jdbcType=BIGINT}, #{weights,jdbcType=BIGINT},
      #{picPath,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hycxkj.order.bean.Order">
    <selectKey keyProperty="orderId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderDetailId != null">
        order_detail_id,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="weights != null">
        weights,
      </if>
      <if test="picPath != null">
        pic_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderDetailId != null">
        #{orderDetailId,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=BIGINT},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=BIGINT},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=BIGINT},
      </if>
      <if test="weights != null">
        #{weights,jdbcType=BIGINT},
      </if>
      <if test="picPath != null">
        #{picPath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hycxkj.order.bean.OrderExample" resultType="java.lang.Long">
    select count(*) from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.orderDetailId != null">
        order_detail_id = #{record.orderDetailId,jdbcType=VARCHAR},
      </if>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=BIGINT},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=BIGINT},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=BIGINT},
      </if>
      <if test="record.weights != null">
        weights = #{record.weights,jdbcType=BIGINT},
      </if>
      <if test="record.picPath != null">
        pic_path = #{record.picPath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order
    set order_id = #{record.orderId,jdbcType=BIGINT},
      order_detail_id = #{record.orderDetailId,jdbcType=VARCHAR},
      item_id = #{record.itemId,jdbcType=BIGINT},
      num = #{record.num,jdbcType=INTEGER},
      price = #{record.price,jdbcType=BIGINT},
      total_price = #{record.totalPrice,jdbcType=BIGINT},
      weights = #{record.weights,jdbcType=BIGINT},
      pic_path = #{record.picPath,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <!--  -->
  <insert id="insertByBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="orderId">
    insert into `order` (order_detail_id, item_id, num,price, total_price, weights,pic_path)
    VALUES
    <foreach collection="list" item="order" separator=",">
      (#{order.orderDetailId,jdbcType=VARCHAR},#{order.itemId,jdbcType=BIGINT},#{order.num,jdbcType=INTEGER},#{order.price,jdbcType=BIGINT},
      #{order.totalPrice,jdbcType=BIGINT},#{order.weights,jdbcType=BIGINT}, #{order.picPath,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>