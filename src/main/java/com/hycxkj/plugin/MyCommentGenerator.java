package com.hycxkj.plugin;

import org.mybatis.generator.api.CommentGenerator;
import org.mybatis.generator.api.IntrospectedColumn;
import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.dom.java.*;
import org.mybatis.generator.api.dom.xml.XmlElement;
import org.mybatis.generator.internal.util.StringUtility;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;

/**
 * @author 陈少平
 * @description
 * @create in 2018/2/13 7:08
 */
public class MyCommentGenerator implements CommentGenerator{

    private Properties properties = new Properties();
    private boolean suppressDate = false;
    private boolean suppressAllComments = false;
    private boolean addRemarkComments = false;
    private SimpleDateFormat dateFormat;
    private static final String AHTHOR = "author";
    private static final String PRIMARY_KEY_ANNOTATION_PATH = "primaryKeyAnnotationPath";
    private static final String DB_NAME = "dbName";
    private String author;
    private String primaryKeyAnnotationPath;
//    private Configuration cfg = new Configuration();

    public MyCommentGenerator() {
        dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    }

    public void addJavaFileComment(CompilationUnit compilationUnit) {
    }

    public void addComment(XmlElement xmlElement) {
//        if(!this.suppressAllComments) {
//            xmlElement.addElement(new TextElement("<!--"));
//            StringBuilder sb = new StringBuilder();
//            sb.append("  WARNING - ");
//            sb.append("@mbg.generated");
//            xmlElement.addElement(new TextElement(sb.toString()));
//            xmlElement.addElement(new TextElement("  This element is automatically generated by MyBatis Generator, do not modify."));
//            String s = this.getDateString();
//            if(s != null) {
//                sb.setLength(0);
//                sb.append("  This element was generated on ");
//                sb.append(s);
//                sb.append('.');
//                xmlElement.addElement(new TextElement(sb.toString()));
//            }
//
//            xmlElement.addElement(new TextElement("-->"));
//        }
    }

    public void addRootComment(XmlElement rootElement) {
    }

    public void addConfigurationProperties(Properties properties) {
        this.properties.putAll(properties);
        this.suppressDate = StringUtility.isTrue(properties.getProperty("suppressDate"));
        this.suppressAllComments = StringUtility.isTrue(properties.getProperty("suppressAllComments"));
        this.addRemarkComments = StringUtility.isTrue(properties.getProperty("addRemarkComments"));
        String dateFormatString = properties.getProperty("dateFormat");
        if(StringUtility.stringHasValue(dateFormatString)) {
            this.dateFormat = new SimpleDateFormat(dateFormatString);
        }
        String authorString = properties.getProperty(AHTHOR);
        if (StringUtility.stringHasValue(authorString)) {
            this.author = authorString;
        }
        String tmep = properties.getProperty(PRIMARY_KEY_ANNOTATION_PATH);
        System.out.println(tmep);
        if(!StringUtility.stringHasValue(tmep)) {
            throw new RuntimeException("primaryKeyAnnotationPath 不能为空，此配置是为了标注PrimaryKey的位置");
        }else {
            this.primaryKeyAnnotationPath = tmep;
        }
    }

    protected void addJavadocTag(JavaElement javaElement, boolean markAsDoNotDelete) {
//        StringBuilder sb = new StringBuilder();
//        sb.append(" * ");
//        sb.append("@mbg.generated");
//        if(markAsDoNotDelete) {
//            sb.append(" do_not_delete_during_merge");
//        }
//
//        String s = this.getDateString();
//        if(s != null) {
//            sb.append(' ');
//            sb.append(s);
//        }
//
//        javaElement.addJavaDocLine(sb.toString());
    }

    protected String getDateString() {
        if (suppressDate) {
            return null;
        } else if (dateFormat != null) {
            return dateFormat.format(new Date());
        } else {
            return new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
        }
    }

    public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable) {
//        if(!this.suppressAllComments) {
//            StringBuilder sb = new StringBuilder();
//            innerClass.addJavaDocLine("/**");
//            innerClass.addJavaDocLine(" * This class was generated by MyBatis Generator.");
//            sb.append(" * This class corresponds to the database table ");
//            sb.append(introspectedTable.getFullyQualifiedTable());
//            innerClass.addJavaDocLine(sb.toString());
//            this.addJavadocTag(innerClass, false);
//            innerClass.addJavaDocLine(" */");
//        }
    }

    public void addModelClassComment(TopLevelClass topLevelClass, IntrospectedTable introspectedTable) {
        if (suppressAllComments  || !addRemarkComments) {
            return;
        }
        //获取实体类名称
        String entityName = introspectedTable.getFullyQualifiedTable().getDomainObjectName();
        StringBuilder sb = new StringBuilder();

        //添加导入类的信息
        topLevelClass.addJavaDocLine("import org.springframework.format.annotation.DateTimeFormat;");
        topLevelClass.addJavaDocLine("import com.alibaba.fastjson.annotation.JSONField;");
        topLevelClass.addJavaDocLine("import io.swagger.annotations.ApiModel;");
        topLevelClass.addJavaDocLine("import io.swagger.annotations.ApiModelProperty;");
        topLevelClass.addJavaDocLine("import "+ primaryKeyAnnotationPath+";");

        //添加类注释
        topLevelClass.addJavaDocLine("/**");
        sb.append(" * 实体类对应的数据表为：  ");
        sb.append(introspectedTable.getFullyQualifiedTable());
        topLevelClass.addJavaDocLine(sb.toString());
        topLevelClass.addJavaDocLine(" * @author " + author);
        //添加时间
        topLevelClass.addJavaDocLine(" * @date " + getDateString());
        topLevelClass.addJavaDocLine(" */");
        topLevelClass.addJavaDocLine("@ApiModel(value =\"" + entityName + "\")");
    }

    public void addEnumComment(InnerEnum innerEnum, IntrospectedTable introspectedTable) {
        if(!this.suppressAllComments) {
            StringBuilder sb = new StringBuilder();
            innerEnum.addJavaDocLine("/**");
            innerEnum.addJavaDocLine(" * This enum was generated by MyBatis Generator.");
            sb.append(" * This enum corresponds to the database table ");
            sb.append(introspectedTable.getFullyQualifiedTable());
            innerEnum.addJavaDocLine(sb.toString());
            this.addJavadocTag(innerEnum, false);
            innerEnum.addJavaDocLine(" */");
        }
    }

    public void addFieldComment(Field field, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn) {
        if (suppressAllComments) {
            return;
        }
        // 如果是主键，那么添加@PrimaryKey注解
        if(introspectedColumn.isAutoIncrement()) {
            field.addJavaDocLine("@PrimaryKey");
        }
        //字段备注信息
        String remarks = introspectedColumn.getRemarks();
        field.addJavaDocLine("@ApiModelProperty(value = \"" + remarks + "\")");

        //当字段数据类型为date时添加日期注释
        StringBuffer sb = new StringBuffer();
        if(introspectedColumn.getJdbcType() == 93) {
            sb.append("@DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\")");
        }

        if(sb.length() > 0) {
            field.addJavaDocLine(sb.toString());
        }
//            if(this.addRemarkComments && StringUtility.stringHasValue(remarks)) {
//                field.addJavaDocLine(" * Database Column Remarks:");
//                String[] remarkLines = remarks.split(System.getProperty("line.separator"));
//                String[] var6 = remarkLines;
//                int var7 = remarkLines.length;
//
//                for(int var8 = 0; var8 < var7; ++var8) {
//                    String remarkLine = var6[var8];
//                    field.addJavaDocLine(" *   " + remarkLine);
//                }
//            }
//
//            field.addJavaDocLine(" *");
//            field.addJavaDocLine(" * This field was generated by MyBatis Generator.");
//            StringBuilder sb = new StringBuilder();
//            sb.append(" * This field corresponds to the database column ");
//            sb.append(introspectedTable.getFullyQualifiedTable());
//            sb.append('.');
//            sb.append(introspectedColumn.getActualColumnName());
//            field.addJavaDocLine(sb.toString());
//            this.addJavadocTag(field, false);
//            field.addJavaDocLine(" */");
    }

    public void addFieldComment(Field field, IntrospectedTable introspectedTable) {
        if(!this.suppressAllComments) {
            StringBuilder sb = new StringBuilder();
            field.addJavaDocLine("/**");
            field.addJavaDocLine(" * This field was generated by MyBatis Generator.");
            sb.append(" * This field corresponds to the database table ");
            sb.append(introspectedTable.getFullyQualifiedTable());
            field.addJavaDocLine(sb.toString());
            this.addJavadocTag(field, false);
            field.addJavaDocLine(" */");
        }
    }

    public void addGeneralMethodComment(Method method, IntrospectedTable introspectedTable) {
//        if(!this.suppressAllComments) {
//            StringBuilder sb = new StringBuilder();
//            method.addJavaDocLine("/**");
//            method.addJavaDocLine(" * This method was generated by MyBatis Generator.");
//            sb.append(" * This method corresponds to the database table ");
//            sb.append(introspectedTable.getFullyQualifiedTable());
//            method.addJavaDocLine(sb.toString());
//            this.addJavadocTag(method, false);
//            method.addJavaDocLine(" */");
//        }
    }

    public void addGetterComment(Method method, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn) {
        if (suppressAllComments) {
            return;
        }

        StringBuilder sb = new StringBuilder();
        if(introspectedColumn.getJdbcType() == 93) {
            sb.append("@JSONField(format = \"yyyy-MM-dd HH:mm:ss\")");
        }

        if(sb.length() > 0) {
            method.addJavaDocLine(sb.toString());
        }
        //        if(!this.suppressAllComments) {
//            StringBuilder sb = new StringBuilder();
//            method.addJavaDocLine("/**");
//            method.addJavaDocLine(" * This method was generated by MyBatis Generator.");
//            sb.append(" * This method returns the value of the database column ");
//            sb.append(introspectedTable.getFullyQualifiedTable());
//            sb.append('.');
//            sb.append(introspectedColumn.getActualColumnName());
//            method.addJavaDocLine(sb.toString());
//            method.addJavaDocLine(" *");
//            sb.setLength(0);
//            sb.append(" * @return the value of ");
//            sb.append(introspectedTable.getFullyQualifiedTable());
//            sb.append('.');
//            sb.append(introspectedColumn.getActualColumnName());
//            method.addJavaDocLine(sb.toString());
//            this.addJavadocTag(method, false);
//            method.addJavaDocLine(" */");
//        }
    }

    public void addSetterComment(Method method, IntrospectedTable introspectedTable, IntrospectedColumn introspectedColumn) {
//        if(!this.suppressAllComments) {
//            StringBuilder sb = new StringBuilder();
//            method.addJavaDocLine("/**");
//            method.addJavaDocLine(" * This method was generated by MyBatis Generator.");
//            sb.append(" * This method sets the value of the database column ");
//            sb.append(introspectedTable.getFullyQualifiedTable());
//            sb.append('.');
//            sb.append(introspectedColumn.getActualColumnName());
//            method.addJavaDocLine(sb.toString());
//            method.addJavaDocLine(" *");
//            Parameter parm = (Parameter)method.getParameters().get(0);
//            sb.setLength(0);
//            sb.append(" * @param ");
//            sb.append(parm.getName());
//            sb.append(" the value for ");
//            sb.append(introspectedTable.getFullyQualifiedTable());
//            sb.append('.');
//            sb.append(introspectedColumn.getActualColumnName());
//            method.addJavaDocLine(sb.toString());
//            this.addJavadocTag(method, false);
//            method.addJavaDocLine(" */");
//        }
    }

    public void addClassComment(InnerClass innerClass, IntrospectedTable introspectedTable, boolean markAsDoNotDelete) {
        if(!this.suppressAllComments) {
            StringBuilder sb = new StringBuilder();
            innerClass.addJavaDocLine("/**");
            innerClass.addJavaDocLine(" * This class was generated by MyBatis Generator.");
            sb.append(" * This class corresponds to the database table ");
            sb.append(introspectedTable.getFullyQualifiedTable());
            innerClass.addJavaDocLine(sb.toString());
            this.addJavadocTag(innerClass, markAsDoNotDelete);
            innerClass.addJavaDocLine(" */");
        }
    }
}
