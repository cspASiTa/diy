<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hycxkj.user.mapper.UserCollectionMapper">
  <resultMap id="BaseResultMap" type="com.hycxkj.user.bean.UserCollection">
    <result column="collection_id" jdbcType="BIGINT" property="collectionId" />
    <result column="u_id" jdbcType="BIGINT" property="uId" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    collection_id, u_id, type_id, type, create_time
  </sql>
  <select id="selectByExample" parameterType="com.hycxkj.user.bean.UserCollectionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.hycxkj.user.bean.UserCollectionExample">
    delete from user_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hycxkj.user.bean.UserCollection">
    insert into user_collection (collection_id, u_id, type_id,
      type, create_time)
    values (#{collectionId,jdbcType=BIGINT}, #{uId,jdbcType=BIGINT}, #{typeId,jdbcType=BIGINT},
      #{type,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hycxkj.user.bean.UserCollection">
    insert into user_collection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="collectionId != null">
        collection_id,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="collectionId != null">
        #{collectionId,jdbcType=BIGINT},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hycxkj.user.bean.UserCollectionExample" resultType="java.lang.Long">
    select count(*) from user_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_collection
    <set>
      <if test="record.collectionId != null">
        collection_id = #{record.collectionId,jdbcType=BIGINT},
      </if>
      <if test="record.uId != null">
        u_id = #{record.uId,jdbcType=BIGINT},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_collection
    set collection_id = #{record.collectionId,jdbcType=BIGINT},
      u_id = #{record.uId,jdbcType=BIGINT},
      type_id = #{record.typeId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectCollectionProductionInfo" resultType="com.hycxkj.production.font.FontSimpleProduction">
    SELECT pro_id, user_id, user_nick, avatar, title, image, like_count, allow_comments, readnumber
    FROM production INNER JOIN user_user
	ON production.u_id = user_user.user_id INNER JOIN user_collection
	ON production.pro_id = user_collection.type_id
    WHERE user_collection.u_id = #{userId}
    AND user_collection.type = 0
  </select>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>